Background
==========

In order to make a website visible through the apache2 webserver, one has to
create an appropriate configuration for it and save it to a location where
the webserver can find it.

There are many different ways to create such a configuration. One way, which is
followed here, is to have at least one configuration file per website which is
refered to as "virtual host".

How apache2 find its configuration
----------------------------------

The Debian implementation of apache2 comes with the following directory structure
in its main configuration directory /etc/apache2:

├── apache2.conf
├── conf-available/
├── conf-enabled/
├── envvars
├── magic
├── mods-available/
├── mods-enabled/
├── ports.conf
├── sites-available/
└── sites-enabled/

The main configuration file is apache2.conf, which loads other configuration files
from the {mods,conf,site}-enabled directories, in this order. The idea is to put
configuration files in the {mods,conf,site}-available directories and create a
symlink for each file which should be active in the resp. *-enabled directory.

The activation and deactivation of configuration files is done by helper programs
a2{en|dis}{mod|conf|site}, hence "a2enconf foo" will enable the configuration
file foo.conf by creating a symlink from /etc/apache2/conf-available/foo.conf to
/etc/apache2/conf-enabled/foo.conf.

It is possible to stick with this and just create the necessary configuration
files in the designated folders or even change the standard files.

The approach which is followed here is different. The idea is to have a user
specific apache2 configuration directory which reflects almost the same
structure. The mods-available and mods-enabled directories are not needed and
so are the various files in the /etc/apache2 directory. Hence the structure of
the user specific apache2 configuration directory looks like this:

├── conf-available/
├── conf-enabled/
├── sites-available/
├── sites-enabled/
└── templates/

As with the main apache2 configuration directory, arbitrary configuration files
go into the conf-available subdirectory and vhost configuration files into the
sites-available subdirectory. Likewise, a configuration or a vhost can be
activated by symlinking them into the *-enabled directory.

But, how does apache2 know that it has to include additional configuration from
these both directories? Well, we need two files with two configuration directives
in the main apache2 configuration directory.


Extending the configuration for apache2
---------------------------------------

In /etc/apache2/conf-available we create a file with any name, however it has to
end with .conf. 


